name: continuous_release

on:
  push:
    branches: ["**"]
    tags: ["v**"]

env:
  GITHUB_TOKEN: ${{ secrets.BOT_ACCESS_TOKEN }}

jobs:
  bump_version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ env.GITHUB_TOKEN }}
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Bump Version
        if: startsWith(github.ref, 'refs/heads/')
        run: make bump
        env:
          BUILD_VERSION: v${{ steps.gitversion.outputs.MajorMinorPatch }}-rc${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
          MAJOR_MINOR_PATCH: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      - name: Bump Version for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: make bump
        env:
          BUILD_VERSION: v${{ steps.gitversion.outputs.MajorMinorPatch }}
          MAJOR_MINOR_PATCH: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      - name: Commit Version Bump if on main
        if: github.ref == 'refs/heads/main'
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: "chore: [skip ci] bump version to v${{ steps.gitversion.outputs.MajorMinorPatch }}-rc${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: bump_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3.1.0
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
